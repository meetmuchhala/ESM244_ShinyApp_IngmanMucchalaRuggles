---
title: "Output_4"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(tsibble)
library(feasts)
library(fable)
library(here)
library(janitor)
library(sf)
library(tmap)
library(dplyr)
library(here)
library(terra)
```

```{r}
lead_df_raw <- read_csv(here("data", "LEAD_CA_County.csv")) %>% 
  janitor::clean_names()

lead_df <- lead_df_raw %>% 
  select(c(county, energy_burden_percent_income, avg_annual_energy_cost, total_households, household_income))

sunroof_df_raw <- read_csv(here("data", "project_sunroof_county_2019.csv")) %>% 
  janitor::clean_names() 

sunroof_df <- sunroof_df_raw %>% 
  select(c(region_name, lat_avg, lng_avg, yearly_sunlight_kwh_kw_threshold_avg, count_qualified, percent_covered, percent_qualified, number_of_panels_median, number_of_panels_total, yearly_sunlight_kwh_median, yearly_sunlight_kwh_total, existing_installs_count))

county_sf <- read_sf(here("data", "ca_counties", "CA_Counties_TIGER2016.shp")) %>% 
  janitor::clean_names() %>% 
  select(c(name, geometry))
```

```{r}
# join the 3 datasets to county polygons
lead_sunroof_sf <- full_join(county_sf, lead_df, by=c("name"="county"))

county_sunroof_lead_sf <- full_join(lead_sunroof_sf, sunroof_df, by=c("name"="region_name")) 
```

```{r}
#| fig-cap: "No data for Contra Contra County."

ggplot() + 
  geom_sf(data = county_sf) +
  geom_sf(data = county_sunroof_lead_sf, aes(fill = energy_burden_percent_income), size = 2) + # size = border
  scale_fill_gradientn(colors = c('darkorchid4', 'chocolate1')) +
  theme_void() +
  labs(fill = 'Energy Burden (% of Income)')
```


```{r}
# scores

EJ_score <- county_sunroof_lead_sf %>% 
  mutate(E_burden_score = ifelse(energy_burden_percent_income>=3, 1, 0)) %>% 
  mutate(sunlight_score = ifelse(yearly_sunlight_kwh_median>=20000, 1, 0)) %>% 
  mutate(income_score = ifelse(household_income<=91905, 1, 0)) %>% 
  mutate(qualified_score = ifelse(percent_qualified>=85, 1, 0)) %>% 
  mutate(EJ_score = E_burden_score + sunlight_score + income_score + qualified_score) %>% 
  select(name, geometry, E_burden_score, sunlight_score, income_score, qualified_score, EJ_score)

# if want to specifcy thresholds:
# yearly sunlight total kwh (total solar energy generation potential for all roof space): >10^8 kwh? bias against smaller counties
# energy burden: 3 or 4%
# household income: <$91,905 (2022 CA median household income)
# # households and count qualified (# buildings solar suitable): -> # suitable buildings divided by #households (rough similarity) *100 = %suitable buildings -> >50%? prioritize counties with high solar potential?
```


```{r}
CSL_energy_burden <- county_sunroof_lead_sf %>% 
  select(c(geometry, energy_burden_percent_income))

CSL_sunlight <- county_sunroof_lead_sf %>% 
  select(c(geometry, yearly_sunlight_kwh_median))

CSL_income <- county_sunroof_lead_sf %>% 
  select(c(geometry, household_income))

CSL_qualified <- county_sunroof_lead_sf %>% 
  select(c(geometry, percent_qualified))

# county_sunroof_lead_score = placeholder thresholds (our score recs)
```


```{r}
#| fig-cap: "Counties in gray do not have data for median sunlight or percent of households qualified, meaning we cannot assign a comparative EJ score. However, scores for energy burden and household income are available."

tmap_mode("view") 

tm_shape(CSL_energy_burden) + 
  tm_polygons('energy_burden_percent_income', palette= c("darkorchid4", "chocolate1"), 
                           title='Energy Burden (% Income)',
                           border.col='grey27', alpha=.9) +
  tm_shape(CSL_sunlight) +
  tm_polygons('yearly_sunlight_kwh_median', palette= c("darkorchid4", "chocolate1"), 
                           title='Median Annual Sunlight (kWh)',
                           border.col='grey27', alpha=.9) +
  tm_shape(CSL_income) +
  tm_polygons('household_income', palette= c("darkorchid4", "chocolate1"), 
                           title='Household Income ($)',
                           border.col='grey27', alpha=.9) +
  tm_shape(CSL_qualified) +
  tm_polygons('percent_qualified', palette= c("darkorchid4", "chocolate1"), 
                           title='Percent of Solar-Qualified Households',
                           border.col='grey27', alpha=.9) +
    tm_shape(county_sunroof_lead_score) +
  tm_polygons('EJ_score', palette= c("YlGnBu"), 
                           title='EJ Score',
                           border.col='grey27', alpha=.9) +
  tmap_options(max.categories= 57) +
  tm_view(view.legend.position = c("right", "top"))+
  tm_layout(title= 'Solar Potential: Environmental Justice', 
            title.position = c('right', 'top'))

# need to get EJ score as discrete on tmap
```












